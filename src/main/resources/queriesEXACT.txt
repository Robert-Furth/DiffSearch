_ --> nativeImageMimes.clear();
TruffleEventInstrument.this.toolEventListener.returnValue(node, vFrame, result); --> ASTInstrument.this.astListener.returnValue(ASTInstrument.this.probe, node, vFrame, result);
_ -->import com.oracle.graal.api.replacements.*;
_ -->import java.lang.reflect.InvocationTargetException; import java.util.Collection;
Drawable helpDrawable = com.hippo.vector.VectorDrawable.create(context, R.xml.ic_help_circle_x24); mNormalSearchModeHelp.setDrawable(helpDrawable); -->_
return new LongVectorImpl(name, v); --> return new LongVectorImpl(field(), v);
public static void denoise(double[] t, Wavelet wavelet) { --> static void denoise(double[] t, Wavelet wavelet) {
value = OBJECT_MAPPER.readValue(valueString, new TypeReference<Map<Object, Object>>() { }); --> value = OBJECT_MAPPER.readValue(valueString, TypeReferences.MAP_OBJECT_OBJECT);
public void createAlias(Type type, int aliasedValue) { GlobalAlias alias = new GlobalAlias(type, aliasedValue); --> public void createAlias(Type type, int aliasedValue, long linkage) { GlobalAlias alias = new GlobalAlias(type, aliasedValue, linkage);
out.println(" // CheckStyle: resume line length check"); --> out.println(" // Checkstyle: resume");
