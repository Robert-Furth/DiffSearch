diff --git a/parse.py b/parse.py
index 01e2818..d3c3eef 100644
--- a/parse.py
+++ b/parse.py
@@ -72,7 +72,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..d3c3eef 100644
--- a/parse.py
+++ b/parse.py
@@ -72,7 +72,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/.gitignore b/.gitignore
index fd84321..ad6aa1b 100644
--- a/.gitignore
+++ b/.gitignore
@@ -131,4 +131,4 @@ dmypy.json
 Images/
 YouTube_Report.pdf
 !Images/LOGO.png
-!Images/red.png
+!Images/red.png
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..d3c3eef 100644
--- a/parse.py
+++ b/parse.py
@@ -72,7 +72,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/.gitignore b/.gitignore
index fd84321..bb302e1 100644
--- a/.gitignore
+++ b/.gitignore
@@ -129,6 +129,4 @@ dmypy.json
 
 # Self data
 Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+YouTube_Report.pdf
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..d3c3eef 100644
--- a/parse.py
+++ b/parse.py
@@ -72,7 +72,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..d3c3eef 100644
--- a/parse.py
+++ b/parse.py
@@ -72,7 +72,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..d3c3eef 100644
--- a/parse.py
+++ b/parse.py
@@ -72,7 +72,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/report.py b/report.py
index 7d91bd3..6e05842 100644
--- a/report.py
+++ b/report.py
@@ -1,6 +1,7 @@
-import sys
 import math
 import subprocess
+import sys
+
 import numpy as np
 import seaborn as sns
 import matplotlib.pyplot as plt
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..d3c3eef 100644
--- a/parse.py
+++ b/parse.py
@@ -72,7 +72,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/report.py b/report.py
index 7d91bd3..6e05842 100644
--- a/report.py
+++ b/report.py
@@ -1,6 +1,7 @@
-import sys
 import math
 import subprocess
+import sys
+
 import numpy as np
 import seaborn as sns
 import matplotlib.pyplot as plt
diff --git a/requirements.txt b/requirements.txt
index 6a5f0db..3509d0c 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,3 +1,4 @@
+pylab
 numpy
 seaborn
 matplotlib
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..d3c3eef 100644
--- a/parse.py
+++ b/parse.py
@@ -72,7 +72,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/report.py b/report.py
index 7d91bd3..6e05842 100644
--- a/report.py
+++ b/report.py
@@ -1,6 +1,7 @@
-import sys
 import math
 import subprocess
+import sys
+
 import numpy as np
 import seaborn as sns
 import matplotlib.pyplot as plt
diff --git a/requirements.txt b/requirements.txt
index 6a5f0db..3509d0c 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,3 +1,4 @@
+pylab
 numpy
 seaborn
 matplotlib
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..d3c3eef 100644
--- a/parse.py
+++ b/parse.py
@@ -72,7 +72,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/report.py b/report.py
index 7d91bd3..380b550 100644
--- a/report.py
+++ b/report.py
@@ -1,6 +1,7 @@
-import sys
 import math
 import subprocess
+import sys
+
 import numpy as np
 import seaborn as sns
 import matplotlib.pyplot as plt
@@ -90,7 +91,7 @@ class Visualization:
         unique_string = (" ").join(searchClean)
         bg = np.array(Image.open(logo))
 
-        font = "arial" if sys.platform == "win32" else "DejaVuSansMono" if sys.platform == "linux" else  "Arial"
+        font = "arial" if sys.platform == "win32" else "Arial"
         wordcloud = WordCloud(mask=bg, background_color="white", colormap='Set2', font_path=font,
                               max_words=380,contour_width=2, prefer_horizontal=1).generate(unique_string)
 
diff --git a/requirements.txt b/requirements.txt
index 6a5f0db..3509d0c 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,3 +1,4 @@
+pylab
 numpy
 seaborn
 matplotlib
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..d3c3eef 100644
--- a/parse.py
+++ b/parse.py
@@ -72,7 +72,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/report.py b/report.py
index 7d91bd3..380b550 100644
--- a/report.py
+++ b/report.py
@@ -1,6 +1,7 @@
-import sys
 import math
 import subprocess
+import sys
+
 import numpy as np
 import seaborn as sns
 import matplotlib.pyplot as plt
@@ -90,7 +91,7 @@ class Visualization:
         unique_string = (" ").join(searchClean)
         bg = np.array(Image.open(logo))
 
-        font = "arial" if sys.platform == "win32" else "DejaVuSansMono" if sys.platform == "linux" else  "Arial"
+        font = "arial" if sys.platform == "win32" else "Arial"
         wordcloud = WordCloud(mask=bg, background_color="white", colormap='Set2', font_path=font,
                               max_words=380,contour_width=2, prefer_horizontal=1).generate(unique_string)
 
diff --git a/requirements.txt b/requirements.txt
index 6a5f0db..3509d0c 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,3 +1,4 @@
+pylab
 numpy
 seaborn
 matplotlib
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..d3c3eef 100644
--- a/parse.py
+++ b/parse.py
@@ -72,7 +72,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/report.py b/report.py
index 7d91bd3..380b550 100644
--- a/report.py
+++ b/report.py
@@ -1,6 +1,7 @@
-import sys
 import math
 import subprocess
+import sys
+
 import numpy as np
 import seaborn as sns
 import matplotlib.pyplot as plt
@@ -90,7 +91,7 @@ class Visualization:
         unique_string = (" ").join(searchClean)
         bg = np.array(Image.open(logo))
 
-        font = "arial" if sys.platform == "win32" else "DejaVuSansMono" if sys.platform == "linux" else  "Arial"
+        font = "arial" if sys.platform == "win32" else "Arial"
         wordcloud = WordCloud(mask=bg, background_color="white", colormap='Set2', font_path=font,
                               max_words=380,contour_width=2, prefer_horizontal=1).generate(unique_string)
 
diff --git a/requirements.txt b/requirements.txt
index 6a5f0db..3509d0c 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,3 +1,4 @@
+pylab
 numpy
 seaborn
 matplotlib
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..f07448d 100644
--- a/parse.py
+++ b/parse.py
@@ -38,28 +38,20 @@ class HTML:
 
     def find_times(self):
         times = []
-        pattern = re.compile(r'(?:[A-Za-z]{3}\s\d{1,2}\,\s[0-9]{4}\,|\d{1,2}\s.{9})\s\d?\d:\d\d:\d\d\s(?:PM\s|AM\s)?[A-Z]{3,4}')
+        pattern = re.compile(r'\d{1,2}\s.{9}\s\d\d:\d\d:\d\d\sEST')
         matchList = pattern.findall(str(HTML.htmlWatch))
- 
+
         # add '0' to the beginning of the string to make all string same length
         for time in matchList:
-            if time[0].isalpha():
-                if time[6] != ",":
-                    time = time[:4] + "0" + time[4:]               
-                dayOfWeek = datetime.datetime.strptime(time[0:12], '%b %d, %Y').strftime('%a')
-                time = time[:6] + time[7:]
-                dt = datetime.datetime.strptime(time[12:24].strip(), "%I:%M:%S %p")
-                times.append(time[:13] + dt.strftime("%H:%M:%S") + ' ' + time[-3:] + ' ' + dayOfWeek)
+            if len(time) == 24:
+                time = str(0) + time
+                # add the day of week to the end of strings
+                dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
+                times.append(time + ' ' + dayOfWeek)
             else:
-                if len(time) == 24:
-                    time = str(0) + time
-                    # add the day of week to the end of strings
-                    dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
-                    times.append(time + ' ' + dayOfWeek)
-                else:
-                    # add the day of week to the end of strings
-                    dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
-                    times.append(time + ' ' + dayOfWeek)
+                # add the day of week to the end of strings
+                dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
+                times.append(time + ' ' + dayOfWeek)
         return times
 
 
@@ -72,7 +64,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/report.py b/report.py
index 7d91bd3..380b550 100644
--- a/report.py
+++ b/report.py
@@ -1,6 +1,7 @@
-import sys
 import math
 import subprocess
+import sys
+
 import numpy as np
 import seaborn as sns
 import matplotlib.pyplot as plt
@@ -90,7 +91,7 @@ class Visualization:
         unique_string = (" ").join(searchClean)
         bg = np.array(Image.open(logo))
 
-        font = "arial" if sys.platform == "win32" else "DejaVuSansMono" if sys.platform == "linux" else  "Arial"
+        font = "arial" if sys.platform == "win32" else "Arial"
         wordcloud = WordCloud(mask=bg, background_color="white", colormap='Set2', font_path=font,
                               max_words=380,contour_width=2, prefer_horizontal=1).generate(unique_string)
 
diff --git a/requirements.txt b/requirements.txt
index 6a5f0db..3509d0c 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,3 +1,4 @@
+pylab
 numpy
 seaborn
 matplotlib
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..ec27ca8 100644
--- a/parse.py
+++ b/parse.py
@@ -18,9 +18,7 @@ class HTML:
 
     htmlWatch = open(watchHistory, 'r', encoding='utf-8').read()
     htmlSearch = open(searchHistory, 'r', encoding='utf-8').read()
-    try:
-        htmlComment = open(commentHistory, 'r', encoding='utf-8').read()
-    except: pass
+    htmlComment = open(commentHistory, 'r', encoding='utf-8').read()
 
     def find_links(self):
         # search all links based on your personal html file
@@ -38,28 +36,20 @@ class HTML:
 
     def find_times(self):
         times = []
-        pattern = re.compile(r'(?:[A-Za-z]{3}\s\d{1,2}\,\s[0-9]{4}\,|\d{1,2}\s.{9})\s\d?\d:\d\d:\d\d\s(?:PM\s|AM\s)?[A-Z]{3,4}')
+        pattern = re.compile(r'\d{1,2}\s.{9}\s\d\d:\d\d:\d\d\sEST')
         matchList = pattern.findall(str(HTML.htmlWatch))
- 
+
         # add '0' to the beginning of the string to make all string same length
         for time in matchList:
-            if time[0].isalpha():
-                if time[6] != ",":
-                    time = time[:4] + "0" + time[4:]               
-                dayOfWeek = datetime.datetime.strptime(time[0:12], '%b %d, %Y').strftime('%a')
-                time = time[:6] + time[7:]
-                dt = datetime.datetime.strptime(time[12:24].strip(), "%I:%M:%S %p")
-                times.append(time[:13] + dt.strftime("%H:%M:%S") + ' ' + time[-3:] + ' ' + dayOfWeek)
+            if len(time) == 24:
+                time = str(0) + time
+                # add the day of week to the end of strings
+                dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
+                times.append(time + ' ' + dayOfWeek)
             else:
-                if len(time) == 24:
-                    time = str(0) + time
-                    # add the day of week to the end of strings
-                    dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
-                    times.append(time + ' ' + dayOfWeek)
-                else:
-                    # add the day of week to the end of strings
-                    dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
-                    times.append(time + ' ' + dayOfWeek)
+                # add the day of week to the end of strings
+                dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
+                times.append(time + ' ' + dayOfWeek)
         return times
 
 
@@ -72,7 +62,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
@@ -83,13 +73,10 @@ class HTML:
 
 
     def commentHistory(self):
-        try:
-            pattern = re.compile(r'<a href=".*?">')
-            matchList = pattern.findall(str(HTML.htmlComment))
-            link = matchList[-1][9:][:-2]
-            return link, matchList
-        except:
-            pass
+        pattern = re.compile(r'<a href=".*?">')
+        matchList = pattern.findall(str(HTML.htmlComment))
+        link = matchList[-1][9:][:-2]
+        return link, matchList
 
 
 
diff --git a/report.py b/report.py
index 7d91bd3..65c8f2b 100644
--- a/report.py
+++ b/report.py
@@ -1,6 +1,7 @@
-import sys
 import math
 import subprocess
+import sys
+
 import numpy as np
 import seaborn as sns
 import matplotlib.pyplot as plt
@@ -22,16 +23,8 @@ image_dir = os.getcwd() + "/Images/"
 logo = image_dir + "LOGO.png"
 urls = HTML().find_links()
 searchRaw, searchClean = HTML().searchHistory()
-
-try:
-    link, allLinks = HTML().commentHistory()
-except TypeError:
-    link = allLinks = ''
-
-try:
-    like, allLikes = HTML().likeHistory()
-except FileNotFoundError:
-    like = allLikes = ''
+link, allLinks = HTML().commentHistory()
+like, allLikes = HTML().likeHistory()
 
 
 class Visualization:
@@ -90,7 +83,7 @@ class Visualization:
         unique_string = (" ").join(searchClean)
         bg = np.array(Image.open(logo))
 
-        font = "arial" if sys.platform == "win32" else "DejaVuSansMono" if sys.platform == "linux" else  "Arial"
+        font = "arial" if sys.platform == "win32" else "Arial"
         wordcloud = WordCloud(mask=bg, background_color="white", colormap='Set2', font_path=font,
                               max_words=380,contour_width=2, prefer_horizontal=1).generate(unique_string)
 
diff --git a/requirements.txt b/requirements.txt
index 6a5f0db..3509d0c 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,3 +1,4 @@
+pylab
 numpy
 seaborn
 matplotlib
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..f07448d 100644
--- a/parse.py
+++ b/parse.py
@@ -38,28 +38,20 @@ class HTML:
 
     def find_times(self):
         times = []
-        pattern = re.compile(r'(?:[A-Za-z]{3}\s\d{1,2}\,\s[0-9]{4}\,|\d{1,2}\s.{9})\s\d?\d:\d\d:\d\d\s(?:PM\s|AM\s)?[A-Z]{3,4}')
+        pattern = re.compile(r'\d{1,2}\s.{9}\s\d\d:\d\d:\d\d\sEST')
         matchList = pattern.findall(str(HTML.htmlWatch))
- 
+
         # add '0' to the beginning of the string to make all string same length
         for time in matchList:
-            if time[0].isalpha():
-                if time[6] != ",":
-                    time = time[:4] + "0" + time[4:]               
-                dayOfWeek = datetime.datetime.strptime(time[0:12], '%b %d, %Y').strftime('%a')
-                time = time[:6] + time[7:]
-                dt = datetime.datetime.strptime(time[12:24].strip(), "%I:%M:%S %p")
-                times.append(time[:13] + dt.strftime("%H:%M:%S") + ' ' + time[-3:] + ' ' + dayOfWeek)
+            if len(time) == 24:
+                time = str(0) + time
+                # add the day of week to the end of strings
+                dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
+                times.append(time + ' ' + dayOfWeek)
             else:
-                if len(time) == 24:
-                    time = str(0) + time
-                    # add the day of week to the end of strings
-                    dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
-                    times.append(time + ' ' + dayOfWeek)
-                else:
-                    # add the day of week to the end of strings
-                    dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
-                    times.append(time + ' ' + dayOfWeek)
+                # add the day of week to the end of strings
+                dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
+                times.append(time + ' ' + dayOfWeek)
         return times
 
 
@@ -72,7 +64,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
diff --git a/report.py b/report.py
index 7d91bd3..29fbcb9 100644
--- a/report.py
+++ b/report.py
@@ -1,6 +1,4 @@
-import sys
 import math
-import subprocess
 import numpy as np
 import seaborn as sns
 import matplotlib.pyplot as plt
@@ -89,9 +87,7 @@ class Visualization:
         print('Generating Word Cloud.....')
         unique_string = (" ").join(searchClean)
         bg = np.array(Image.open(logo))
-
-        font = "arial" if sys.platform == "win32" else "DejaVuSansMono" if sys.platform == "linux" else  "Arial"
-        wordcloud = WordCloud(mask=bg, background_color="white", colormap='Set2', font_path=font,
+        wordcloud = WordCloud(mask=bg, background_color="white", colormap='Set2', font_path='arial',
                               max_words=380,contour_width=2, prefer_horizontal=1).generate(unique_string)
 
         plt.figure()
@@ -235,12 +231,7 @@ class Visualization:
         pdf.addPage(PdfFileReader(BytesIO(imgTemp.getvalue())).getPage(0))
         pdf.write(open("YouTube_Report.pdf","wb"))
         print('Congratulations! You have successfully created your personal YouTube report!')
-        if sys.platform == "win32":
-            os.startfile("YouTube_Report.pdf")
-        else:
-            opener = "open" if sys.platform == "darwin" else "xdg-open"
-            subprocess.call([opener, "YouTube_Report.pdf"])
-
+        os.startfile("YouTube_Report.pdf")
 
 
 
diff --git a/requirements.txt b/requirements.txt
index 6a5f0db..3509d0c 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,3 +1,4 @@
+pylab
 numpy
 seaborn
 matplotlib
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..21f1fc8 100644
--- a/parse.py
+++ b/parse.py
@@ -38,28 +38,20 @@ class HTML:
 
     def find_times(self):
         times = []
-        pattern = re.compile(r'(?:[A-Za-z]{3}\s\d{1,2}\,\s[0-9]{4}\,|\d{1,2}\s.{9})\s\d?\d:\d\d:\d\d\s(?:PM\s|AM\s)?[A-Z]{3,4}')
+        pattern = re.compile(r'\d{1,2}\s.{9}\s\d\d:\d\d:\d\d\sEST')
         matchList = pattern.findall(str(HTML.htmlWatch))
- 
+
         # add '0' to the beginning of the string to make all string same length
         for time in matchList:
-            if time[0].isalpha():
-                if time[6] != ",":
-                    time = time[:4] + "0" + time[4:]               
-                dayOfWeek = datetime.datetime.strptime(time[0:12], '%b %d, %Y').strftime('%a')
-                time = time[:6] + time[7:]
-                dt = datetime.datetime.strptime(time[12:24].strip(), "%I:%M:%S %p")
-                times.append(time[:13] + dt.strftime("%H:%M:%S") + ' ' + time[-3:] + ' ' + dayOfWeek)
+            if len(time) == 24:
+                time = str(0) + time
+                # add the day of week to the end of strings
+                dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
+                times.append(time + ' ' + dayOfWeek)
             else:
-                if len(time) == 24:
-                    time = str(0) + time
-                    # add the day of week to the end of strings
-                    dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
-                    times.append(time + ' ' + dayOfWeek)
-                else:
-                    # add the day of week to the end of strings
-                    dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
-                    times.append(time + ' ' + dayOfWeek)
+                # add the day of week to the end of strings
+                dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
+                times.append(time + ' ' + dayOfWeek)
         return times
 
 
@@ -72,7 +64,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
@@ -83,13 +75,10 @@ class HTML:
 
 
     def commentHistory(self):
-        try:
-            pattern = re.compile(r'<a href=".*?">')
-            matchList = pattern.findall(str(HTML.htmlComment))
-            link = matchList[-1][9:][:-2]
-            return link, matchList
-        except:
-            pass
+        pattern = re.compile(r'<a href=".*?">')
+        matchList = pattern.findall(str(HTML.htmlComment))
+        link = matchList[-1][9:][:-2]
+        return link, matchList
 
 
 
diff --git a/report.py b/report.py
index 7d91bd3..29fbcb9 100644
--- a/report.py
+++ b/report.py
@@ -1,6 +1,4 @@
-import sys
 import math
-import subprocess
 import numpy as np
 import seaborn as sns
 import matplotlib.pyplot as plt
@@ -89,9 +87,7 @@ class Visualization:
         print('Generating Word Cloud.....')
         unique_string = (" ").join(searchClean)
         bg = np.array(Image.open(logo))
-
-        font = "arial" if sys.platform == "win32" else "DejaVuSansMono" if sys.platform == "linux" else  "Arial"
-        wordcloud = WordCloud(mask=bg, background_color="white", colormap='Set2', font_path=font,
+        wordcloud = WordCloud(mask=bg, background_color="white", colormap='Set2', font_path='arial',
                               max_words=380,contour_width=2, prefer_horizontal=1).generate(unique_string)
 
         plt.figure()
@@ -235,12 +231,7 @@ class Visualization:
         pdf.addPage(PdfFileReader(BytesIO(imgTemp.getvalue())).getPage(0))
         pdf.write(open("YouTube_Report.pdf","wb"))
         print('Congratulations! You have successfully created your personal YouTube report!')
-        if sys.platform == "win32":
-            os.startfile("YouTube_Report.pdf")
-        else:
-            opener = "open" if sys.platform == "darwin" else "xdg-open"
-            subprocess.call([opener, "YouTube_Report.pdf"])
-
+        os.startfile("YouTube_Report.pdf")
 
 
 
diff --git a/requirements.txt b/requirements.txt
index 6a5f0db..3509d0c 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,3 +1,4 @@
+pylab
 numpy
 seaborn
 matplotlib
diff --git a/.gitignore b/.gitignore
index fd84321..a52a295 100644
--- a/.gitignore
+++ b/.gitignore
@@ -125,10 +125,4 @@ venv.bak/
 dmypy.json
 
 # Pyre type checker
-.pyre/
-
-# Self data
-Images/
-YouTube_Report.pdf
-!Images/LOGO.png
-!Images/red.png
+.pyre/
\ No newline at end of file
diff --git a/parse.py b/parse.py
index 01e2818..ec27ca8 100644
--- a/parse.py
+++ b/parse.py
@@ -18,9 +18,7 @@ class HTML:
 
     htmlWatch = open(watchHistory, 'r', encoding='utf-8').read()
     htmlSearch = open(searchHistory, 'r', encoding='utf-8').read()
-    try:
-        htmlComment = open(commentHistory, 'r', encoding='utf-8').read()
-    except: pass
+    htmlComment = open(commentHistory, 'r', encoding='utf-8').read()
 
     def find_links(self):
         # search all links based on your personal html file
@@ -38,28 +36,20 @@ class HTML:
 
     def find_times(self):
         times = []
-        pattern = re.compile(r'(?:[A-Za-z]{3}\s\d{1,2}\,\s[0-9]{4}\,|\d{1,2}\s.{9})\s\d?\d:\d\d:\d\d\s(?:PM\s|AM\s)?[A-Z]{3,4}')
+        pattern = re.compile(r'\d{1,2}\s.{9}\s\d\d:\d\d:\d\d\sEST')
         matchList = pattern.findall(str(HTML.htmlWatch))
- 
+
         # add '0' to the beginning of the string to make all string same length
         for time in matchList:
-            if time[0].isalpha():
-                if time[6] != ",":
-                    time = time[:4] + "0" + time[4:]               
-                dayOfWeek = datetime.datetime.strptime(time[0:12], '%b %d, %Y').strftime('%a')
-                time = time[:6] + time[7:]
-                dt = datetime.datetime.strptime(time[12:24].strip(), "%I:%M:%S %p")
-                times.append(time[:13] + dt.strftime("%H:%M:%S") + ' ' + time[-3:] + ' ' + dayOfWeek)
+            if len(time) == 24:
+                time = str(0) + time
+                # add the day of week to the end of strings
+                dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
+                times.append(time + ' ' + dayOfWeek)
             else:
-                if len(time) == 24:
-                    time = str(0) + time
-                    # add the day of week to the end of strings
-                    dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
-                    times.append(time + ' ' + dayOfWeek)
-                else:
-                    # add the day of week to the end of strings
-                    dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
-                    times.append(time + ' ' + dayOfWeek)
+                # add the day of week to the end of strings
+                dayOfWeek = datetime.datetime.strptime(time[0:11], '%d %b %Y').strftime('%a')
+                times.append(time + ' ' + dayOfWeek)
         return times
 
 
@@ -72,7 +62,7 @@ class HTML:
 
         # save links into list
         for match in matchList:
-            match = match[13:][:-2]
+            match = match[13:][:-3]
             match = match.split('+')
             searchRaw.append(match)
         for word in list(itertools.chain.from_iterable(searchRaw)):
@@ -83,13 +73,10 @@ class HTML:
 
 
     def commentHistory(self):
-        try:
-            pattern = re.compile(r'<a href=".*?">')
-            matchList = pattern.findall(str(HTML.htmlComment))
-            link = matchList[-1][9:][:-2]
-            return link, matchList
-        except:
-            pass
+        pattern = re.compile(r'<a href=".*?">')
+        matchList = pattern.findall(str(HTML.htmlComment))
+        link = matchList[-1][9:][:-2]
+        return link, matchList
 
 
 
diff --git a/report.py b/report.py
index 7d91bd3..29fbcb9 100644
--- a/report.py
+++ b/report.py
@@ -1,6 +1,4 @@
-import sys
 import math
-import subprocess
 import numpy as np
 import seaborn as sns
 import matplotlib.pyplot as plt
@@ -89,9 +87,7 @@ class Visualization:
         print('Generating Word Cloud.....')

-if(x>0):
+if(x<0):

         unique_string = (" ").join(searchClean)
         bg = np.array(Image.open(logo))
-
-        font = "arial" if sys.platform == "win32" else "DejaVuSansMono" if sys.platform == "linux" else  "Arial"
-        wordcloud = WordCloud(mask=bg, background_color="white", colormap='Set2', font_path=font,
+        wordcloud = WordCloud(mask=bg, background_color="white", colormap='Set2', font_path='arial',
                               max_words=380,contour_width=2, prefer_horizontal=1).generate(unique_string)
 
         plt.figure()
@@ -235,12 +231,7 @@ class Visualization:
         pdf.addPage(PdfFileReader(BytesIO(imgTemp.getvalue())).getPage(0))
         pdf.write(open("YouTube_Report.pdf","wb"))
         print('Congratulations! You have successfully created your personal YouTube report!')
-        if sys.platform == "win32":
-            os.startfile("YouTube_Report.pdf")
-        else:
-            opener = "open" if sys.platform == "darwin" else "xdg-open"
-            subprocess.call([opener, "YouTube_Report.pdf"])
-
+        os.startfile("YouTube_Report.pdf")
 
 
 
diff --git a/requirements.txt b/requirements.txt
index 6a5f0db..3509d0c 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,3 +1,4 @@
+pylab
 numpy
 seaborn
 matplotlib
-if(z>0):
+if(z<0):
- x = 4
+ x > 6
- y == 4
+ y != 4
