ID<1>(ID<2>, LT<3>);-->ID<1>(LT<3>, ID<2>);$9$1,0$1,0$0,017241379310344827$00:00:13,228
EXPR = ID<1>(<...>);-->EXPR = ID<1>(<...>);$780$0,6724137931034483$0,6724137931034483$0,5$00:00:18,820
EXPR = ID<1>(<...>)-->EXPR = ID<1>(<...>)$878$0,564993564993565$0,564993564993565$1,0$00:00:07,308
ID<1>(ID<2>, ID<3>);-->ID<1>(ID<3>, ID<2>);$27$0,9642857142857143$0,9642857142857143$0,2$00:00:05,781
ID<0>.ID<1>(ID, LT)-->ID<0>.ID<1>(ID, LT)$156$0,2820976491862568$0,2820976491862568$1,0$00:00:04,918
LT-->LT binOP LT$177$0,41067285382830626$0,41067285382830626$1,0$00:00:04,197
LT-->LT$4993$0,05106987971524425$0,9986$1,0$00:00:01,834
return;-->return ID;$27$0,9642857142857143$0,9642857142857143$1,0$00:00:01,995
return ID;-->return ID;$705$0,45366795366795365$0,45366795366795365$1,0$00:00:02,066
return;-->return EXPR;$117$0,9512195121951219$0,9512195121951219$3,0248033877797946E-4$00:00:07,727
return EXPR;-->return EXPR;$729$0,018006669136717304$0,1458$0,3333333333333333$00:00:08,870
return null;-->return EXPR;$388$1,0$1,0$0,02127659574468085$00:00:07,572
_-->return;$409$0,708838821490468$0,708838821490468$1,0$00:00:02,208
<...>;-->_$62$0,43661971830985913$0,43661971830985913$1,0$00:00:01,590
_--><...>$5000$0,0315746266300401$1,0$1,0$00:00:01,153
System.out.println(EXPR);-->_$323$1,0$1,0$1,0$00:00:05,043
System.out.print(EXPR);-->_$5$1,0$1,0$0,5$00:00:04,863
System.out.print(EXPR);-->System.out.print(EXPR);$13$1,0$1,0$1,0$00:00:10,500
_-->System.out.println(<...>);$153$0,9683544303797469$0,9683544303797469$1,0$00:00:04,377
_-->System.out.println(<...>)$241$0,9757085020242915$0,9757085020242915$1,0$00:00:04,576
EXPR = ID(ID);-->EXPR = ID(ID);$75$0,9036144578313253$0,9036144578313253$1,0$00:00:07,738
EXPR = ID();-->EXPR = ID(ID);$16$1,0$1,0$1,0$00:00:05,933
EXPR = ID()-->EXPR = ID(ID)$18$0,75$0,75$1,0$00:00:05,703
EXPR = LT;-->EXPR = ID;$33$0,9428571428571428$0,9428571428571428$1,0$00:00:05,381
EXPR = LT-->EXPR = ID$67$0,7613636363636364$0,7613636363636364$1,0$00:00:05,462
continue;-->_;$80$1,0$1,0$1,0$00:00:02,137
break;-->_;$54$0,8181818181818182$0,8181818181818182$1,0$00:00:02,304
break;-->return EXPR;$15$1,0$1,0$1,0$00:00:09,492
_-->continue;$332$1,0$1,0$1,0$00:00:05,492
if (EXPR) {-->EXPR;$27$0,6923076923076923$0,6923076923076923$0,0056179775280898875$00:00:08,847
if (LT) {-->if (ID) {$1$1,0$1,0$1,0$00:00:08,395
if (ID) {-->if (EXPR) {$420$0,974477958236659$0,974477958236659$0,011764705882352941$00:00:05,833
if (ID) {-->if (ID()) {$40$1,0$1,0$1,0$00:00:05,352
if (ID<0>) {-->if (ID<1>()) {$40$1,0$1,0$1,0$00:00:04,395
<...>-->} else {$1842$0,02603459972862958$0,3684$1,0$00:00:01,238
_-->import java.io.ID;$1776$1,0$1,0$1,0$00:00:01,032
_-->import java.ID.ID;$4899$0,4947485356493638$0,9798$1,0$00:00:01,020
_-->import org.ID.ID.ID;$2781$0,5183597390493943$0,5562$0,024390243902439025$00:00:01,217
_-->import org.ID.ID.ID.ID;$276$0,03769461895656925$0,0552$0,0020876826722338203$00:00:01,080
import ID.ID.ID.ID;-->import org.ID.ID.ID;$760$1,0$1,0$0,06666666666666667$00:00:19,089
import java.util.ID;-->_$2379$1,0$1,0$1,0$00:00:01,114
if (EXPR != null) {-->if (EXPR == null) {$5$1,0$1,0$1,0$00:00:13,189
if (EXPR == null) {-->if (EXPR != null) {$7$1,0$1,0$1,0$00:00:12,883
<...> ID(<...>) throws ID { --> <...> ID(<...>) {$859$1,0$1,0$0,1111111111111111$00:00:04,628
<...> ID() { --> <...> ID() {$3196$0,7905021023992085$0,7905021023992085$0,0058823529411764705$00:00:02,459
public static void ID() { -->public static void ID() {$11$1,0$1,0$1,0$00:00:04,294
public static void ID(<...>) { -->public static void ID(<...>) {$636$0,9492537313432836$0,9492537313432836$1,0$00:00:05,359
public void ID(<...>) { -->public static void ID(<...>) {$14$0,6666666666666666$0,6666666666666666$1,0$00:00:03,258
package ID;-->package ID;$2$1,0$1,0$1,0$00:00:01,274
EXPR-->try {EXPR;} catch (ID ID) {<...>}$38$1,0$1,0$0,5$00:00:16,029
EXPR;-->try {EXPR;} catch (ID ID) {<...>}$34$1,0$1,0$0,5$00:00:12,844
EXPR;-->try {EXPR;} finally {<...>}$4$1,0$1,0$0,2$00:00:08,993
int ID;-->int ID = LT;$5$1,0$1,0$1,0$00:00:04,680
double ID;-->double ID = EXPR;$1$1,0$1,0$1,0$00:00:03,848
boolean ID = EXPR;-->boolean ID = EXPR;$89$1,0$1,0$1,0$00:00:05,571
while (EXPR) {-->while (EXPR) {$290$1,0$1,0$0,1$00:00:07,647
while (LT) {-->while (EXPR) {$3$1,0$1,0$0,14285714285714285$00:00:09,148
for (<...>) {-->for (<...>) {$2946$0,9969543147208122$0,9969543147208122$1,0$00:00:09,010
_-->for (ID ID: ID) {$551$0,9945848375451264$0,9945848375451264$1,0$00:00:08,576
ID<2>.add(ID<0>);-->ID<2>.addAll(ID<1>);$5$1,0$1,0$1,0$00:00:05,389
ID.toString()-->ID.toString()$810$0,8075772681954138$0,8075772681954138$0,25$00:00:06,018
ID.hashCode()-->ID.hashCode()$91$0,9578947368421052$0,9578947368421052$0,05555555555555555$00:00:07,038
list.add(ID);--><...>$5$1,0$1,0$1,0$00:00:03,937
ID binOP ID-->ID binOP ID$764$0,1873008090218191$0,1873008090218191$1,0$00:00:03,824
ID unOP;-->ID unOP;$49$0,98$0,98$1,0$00:00:14,542
_-->ID unOP$2271$0,9065868263473054$0,9065868263473054$1,0$00:00:08,009
ID<0>() --> ID<0>(EXPR)$3$1,0$1,0$0,3333333333333333$00:00:08,572
EXPR.ID<0>(EXPR<0>, EXPR<1>, EXPR<2>, EXPR<3>); --> EXPR.ID<0>(EXPR<0>, EXPR<1>, EXPR<2>, EXPR<2>);$1$0,07692307692307693$0,07692307692307693$3,7835792659856227E-4$00:00:09,834
EXPR.ID<0>(EXPR<0>, EXPR<1>); --> EXPR.ID<0>(EXPR<0>, EXPR<1>);$705$0,39988655700510495$0,39988655700510495$0,009345794392523364$00:00:04,296
EXPR.ID<0>(EXPR<0>); --> EXPR.ID<0>(EXPR<0>);$1282$0,43949262941378126$0,43949262941378126$0,1111111111111111$00:00:03,077
