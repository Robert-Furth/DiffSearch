ID<1>(ID<2>, LT<3>);-->ID<1>(LT<3>, ID<2>);$9$1,0$1,0$0,058823529411764705$00:00:13,755
EXPR = ID<1>(<...>);-->EXPR = ID<1>(<...>);$685$0,5905172413793104$0,5905172413793104$0,2$00:00:05,872
EXPR = ID<1>(<...>)-->EXPR = ID<1>(<...>)$728$0,46846846846846846$0,46846846846846846$0,25$00:00:07,003
ID<1>(ID<2>, ID<3>);-->ID<1>(ID<3>, ID<2>);$27$0,9642857142857143$0,9642857142857143$0,04$00:00:03,633
ID<0>.ID<1>(ID, LT)-->ID<0>.ID<1>(ID, LT)$151$0,2730560578661845$0,2730560578661845$0,25$00:00:11,844
LT-->LT binOP LT$163$0,37819025522041766$0,37819025522041766$1,0$00:00:06,657
LT-->LT$3328$0,03403976761312495$0,6656$0,5$00:00:02,621
return;-->return ID;$27$0,9642857142857143$0,9642857142857143$1,0$00:00:01,412
return ID;-->return ID;$701$0,4510939510939511$0,4510939510939511$0,5$00:00:01,480
return;-->return EXPR;$121$0,983739837398374$0,983739837398374$0,06666666666666667$00:00:01,310
return EXPR;-->return EXPR;$4244$0,10482894899345437$0,8488$0,005263157894736842$00:00:01,305
return null;-->return EXPR;$356$0,9175257731958762$0,9175257731958762$0,07692307692307693$00:00:05,205
_-->return;$463$0,8024263431542461$0,8024263431542461$1,0$00:00:01,538
<...>;-->_$62$0,43661971830985913$0,43661971830985913$1,0$00:00:00,966
_--><...>$5000$0,0315746266300401$1,0$1,0$00:00:00,916
System.out.println(EXPR);-->_$323$1,0$1,0$1,0$00:00:04,897
System.out.print(EXPR);-->_$5$1,0$1,0$0,5$00:00:05,488
System.out.print(EXPR);-->System.out.print(EXPR);$13$1,0$1,0$1,0$00:00:09,687
_-->System.out.println(<...>);$152$0,9620253164556962$0,9620253164556962$1,0$00:00:03,179
_-->System.out.println(<...>)$247$1,0$1,0$1,0$00:00:03,258
EXPR = ID(ID);-->EXPR = ID(ID);$73$0,8795180722891566$0,8795180722891566$0,5$00:00:05,202
EXPR = ID();-->EXPR = ID(ID);$16$1,0$1,0$1,0$00:00:04,500
EXPR = ID()-->EXPR = ID(ID)$17$0,7083333333333334$0,7083333333333334$0,25$00:00:06,067
EXPR = LT;-->EXPR = ID;$32$0,9142857142857143$0,9142857142857143$1,0$00:00:04,181
EXPR = LT-->EXPR = ID$66$0,75$0,75$0,002145922746781116$00:00:05,665
continue;-->_;$57$0,7125$0,7125$1,0$00:00:01,732
break;-->_;$28$0,42424242424242425$0,42424242424242425$1,0$00:00:01,497
break;-->return EXPR;$15$1,0$1,0$0,2$00:00:05,182
_-->continue;$286$0,8614457831325302$0,8614457831325302$1,0$00:00:04,093
if (EXPR) {-->EXPR;$28$0,717948717948718$0,717948717948718$0,14285714285714285$00:00:07,464
if (LT) {-->if (ID) {$1$1,0$1,0$1,0$00:00:04,598
if (ID) {-->if (EXPR) {$418$0,9698375870069605$0,9698375870069605$0,125$00:00:03,268
if (ID) {-->if (ID()) {$40$1,0$1,0$1,0$00:00:03,606
if (ID<0>) {-->if (ID<1>()) {$40$1,0$1,0$1,0$00:00:03,576
<...>-->} else {$1705$0,024098258706467663$0,341$1,0$00:00:01,203
_-->import java.io.ID;$1775$0,9994369369369369$0,9994369369369369$1,0$00:00:00,515
_-->import java.ID.ID;$4966$0,5015148454857604$0,9932$0,3333333333333333$00:00:00,534
_-->import org.ID.ID.ID;$3064$0,5711090400745573$0,6128$0,125$00:00:00,642
_-->import org.ID.ID.ID.ID;$155$0,021169079486479104$0,031$0,001694915254237288$00:00:00,628
import ID.ID.ID.ID;-->import org.ID.ID.ID;$760$1,0$1,0$0,5$00:00:04,737
import java.util.ID;-->_$2379$1,0$1,0$1,0$00:00:00,510
if (EXPR != null) {-->if (EXPR == null) {$5$1,0$1,0$1,0$00:00:09,475
if (EXPR == null) {-->if (EXPR != null) {$7$1,0$1,0$1,0$00:00:09,812
<...> ID(<...>) throws ID { --> <...> ID(<...>) {$218$0,25378346915017463$0,25378346915017463$1,0$00:00:05,169
<...> ID() { --> <...> ID() {$3095$0,76552065298046$0,76552065298046$1,0$00:00:01,072
public static void ID() { -->public static void ID() {$11$1,0$1,0$1,0$00:00:04,878
public static void ID(<...>) { -->public static void ID(<...>) {$669$0,9985074626865672$0,9985074626865672$1,0$00:00:04,816
public void ID(<...>) { -->public static void ID(<...>) {$15$0,7142857142857143$0,7142857142857143$1,0$00:00:02,846
package ID;-->package ID;$2$1,0$1,0$1,0$00:00:00,760
EXPR-->try {EXPR;} catch (ID ID) {<...>}$38$1,0$1,0$0,0196078431372549$00:00:14,392
EXPR;-->try {EXPR;} catch (ID ID) {<...>}$34$1,0$1,0$0,5$00:00:14,199
EXPR;-->try {EXPR;} finally {<...>}$4$1,0$1,0$0,3333333333333333$00:00:19,615
int ID;-->int ID = LT;$5$1,0$1,0$1,0$00:00:04,162
double ID;-->double ID = EXPR;$1$1,0$1,0$1,0$00:00:03,490
boolean ID = EXPR;-->boolean ID = EXPR;$89$1,0$1,0$1,0$00:00:04,038
while (EXPR) {-->while (EXPR) {$290$1,0$1,0$0,16666666666666666$00:00:10,239
while (LT) {-->while (EXPR) {$3$1,0$1,0$0,16666666666666666$00:00:10,313
for (<...>) {-->for (<...>) {$2893$0,9790186125211506$0,9790186125211506$0,25$00:00:06,533
_-->for (ID ID: ID) {$546$0,9855595667870036$0,9855595667870036$1,0$00:00:07,730
ID<2>.add(ID<0>);-->ID<2>.addAll(ID<1>);$5$1,0$1,0$0,3333333333333333$00:00:05,441
ID.toString()-->ID.toString()$969$0,9661016949152542$0,9661016949152542$1,0$00:00:07,083
ID.hashCode()-->ID.hashCode()$91$0,9578947368421052$0,9578947368421052$0,023255813953488372$00:00:05,814
list.add(ID);--><...>$5$1,0$1,0$0,5$00:00:07,852
ID binOP ID-->ID binOP ID$530$0,1299338073057122$0,1299338073057122$1,0$00:00:08,817
ID unOP;-->ID unOP;$48$0,96$0,96$0,5$00:00:07,508
_-->ID unOP$822$0,3281437125748503$0,3281437125748503$1,0$00:00:02,478
ID<0>() --> ID<0>(EXPR)$3$1,0$1,0$1,0$00:00:06,129
EXPR.ID<0>(EXPR<0>, EXPR<1>, EXPR<2>, EXPR<3>); --> EXPR.ID<0>(EXPR<0>, EXPR<1>, EXPR<2>, EXPR<2>);$0$0,0$0,0$0,0$00:00:04,318
EXPR.ID<0>(EXPR<0>, EXPR<1>); --> EXPR.ID<0>(EXPR<0>, EXPR<1>);$529$0,30005672149744755$0,30005672149744755$0,25$00:00:03,200
EXPR.ID<0>(EXPR<0>); --> EXPR.ID<0>(EXPR<0>);$1109$0,3801851217003771$0,3801851217003771$0,2$00:00:02,399
