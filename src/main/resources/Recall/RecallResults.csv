ID<1>(ID<2>, LT<3>);-->ID<1>(LT<3>, ID<2>);$9$1,0$1,0$0,0625$00:00:08,422
EXPR = ID<1>(<...>);-->EXPR = ID<1>(<...>);$138$0,11896551724137931$0,276$0,5$00:00:05,530
EXPR = ID<1>(<...>)-->EXPR = ID<1>(<...>)$60$0,03861003861003861$0,12$1,0$00:00:06,038
ID<1>(ID<2>, ID<3>);-->ID<1>(ID<3>, ID<2>);$27$0,9642857142857143$0,9642857142857143$0,5$00:00:04,898
ID<0>.ID<1>(ID, LT)-->ID<0>.ID<1>(ID, LT)$16$0,028933092224231464$0,032$1,0$00:00:05,421
LT-->LT binOP LT$97$0,22505800464037123$0,22505800464037123$1,0$00:00:05,243
LT-->LT$444$0,004541363227231814$0,888$1,0$00:00:04,812
return;-->return ID;$27$0,9642857142857143$0,9642857142857143$1,0$00:00:04,638
return ID;-->return ID;$391$0,2516087516087516$0,782$0,2$00:00:04,676
return;-->return EXPR;$117$0,9512195121951219$0,9512195121951219$0,3333333333333333$00:00:04,591
return EXPR;-->return EXPR;$286$0,007064344819068791$0,572$0,0056179775280898875$00:00:04,580
return null;-->return EXPR;$269$0,6932989690721649$0,6932989690721649$0,07692307692307693$00:00:04,617
_-->return;$103$0,17850953206239167$0,206$1,0$00:00:04,627
<...>;-->_$2$0,014084507042253521$0,014084507042253521$1,0$00:00:04,710
_--><...>$500$0,00315746266300401$1,0$1,0$00:00:04,683
System.out.println(EXPR);-->_$232$0,718266253869969$0,718266253869969$1,0$00:00:04,669
System.out.print(EXPR);-->_$3$0,6$0,6$1,0$00:00:04,731
System.out.print(EXPR);-->System.out.print(EXPR);$11$0,8461538461538461$0,8461538461538461$1,0$00:00:05,401
_-->System.out.println(<...>);$127$0,8037974683544303$0,8037974683544303$1,0$00:00:06,739
_-->System.out.println(<...>)$201$0,8137651821862348$0,8137651821862348$1,0$00:00:08,916
EXPR = ID(ID);-->EXPR = ID(ID);$72$0,8674698795180723$0,8674698795180723$1,0$00:00:05,567
EXPR = ID();-->EXPR = ID(ID);$16$1,0$1,0$1,0$00:00:05,062
EXPR = ID()-->EXPR = ID(ID)$0$0,0$0,0$0,0$00:00:05,315
EXPR = LT;-->EXPR = ID;$30$0,8571428571428571$0,8571428571428571$0,5$00:00:04,670
EXPR = LT-->EXPR = ID$0$0,0$0,0$0,0$00:00:04,893
continue;-->_;$47$0,5875$0,5875$1,0$00:00:04,688
break;-->_;$28$0,42424242424242425$0,42424242424242425$1,0$00:00:04,993
break;-->return EXPR;$14$0,9333333333333333$0,9333333333333333$1,0$00:00:04,836
_-->continue;$275$0,8283132530120482$0,8283132530120482$1,0$00:00:05,107
if (EXPR) {-->EXPR;$2$0,05128205128205128$0,05128205128205128$0,03125$00:00:05,064
if (LT) {-->if (ID) {$1$1,0$1,0$1,0$00:00:04,890
if (ID) {-->if (EXPR) {$253$0,5870069605568445$0,5870069605568445$1,0$00:00:04,781
if (ID) {-->if (ID()) {$40$1,0$1,0$1,0$00:00:04,957
if (ID<0>) {-->if (ID<1>()) {$40$1,0$1,0$1,0$00:00:04,667
<...>-->} else {$277$0,0039150836725463595$0,554$1,0$00:00:04,872
_-->import java.io.ID;$500$0,28153153153153154$1,0$1,0$00:00:05,241
_-->import java.ID.ID;$500$0,05049484952534841$1,0$1,0$00:00:04,618
_-->import org.ID.ID.ID;$500$0,09319664492078285$1,0$1,0$00:00:04,781
_-->import org.ID.ID.ID.ID;$487$0,0665118819994537$0,974$0,07142857142857142$00:00:04,650
import ID.ID.ID.ID;-->import org.ID.ID.ID;$500$0,6578947368421053$1,0$1,0$00:00:05,093
import java.util.ID;-->_$500$0,2101723413198823$1,0$1,0$00:00:05,413
if (EXPR != null) {-->if (EXPR == null) {$5$1,0$1,0$1,0$00:00:05,878
if (EXPR == null) {-->if (EXPR != null) {$7$1,0$1,0$1,0$00:00:05,524
<...> ID(<...>) throws ID { --> <...> ID(<...>) {$125$0,14551804423748546$0,25$1,0$00:00:04,848
<...> ID() { --> <...> ID() {$475$0,11748701459312391$0,95$1,0$00:00:04,650
public static void ID() { -->public static void ID() {$10$0,9090909090909091$0,9090909090909091$1,0$00:00:04,693
public static void ID(<...>) { -->public static void ID(<...>) {$401$0,5985074626865672$0,802$1,0$00:00:04,676
public void ID(<...>) { -->public static void ID(<...>) {$11$0,5238095238095238$0,5238095238095238$1,0$00:00:04,676
package ID;-->package ID;$2$1,0$1,0$1,0$00:00:04,825
EXPR-->try {EXPR;} catch (ID ID) {<...>}$29$0,7631578947368421$0,7631578947368421$0,02857142857142857$00:00:05,670
EXPR;-->try {EXPR;} catch (ID ID) {<...>}$28$0,8235294117647058$0,8235294117647058$1,0$00:00:06,986
EXPR;-->try {EXPR;} finally {<...>}$4$1,0$1,0$1,0$00:00:06,109
int ID;-->int ID = LT;$5$1,0$1,0$1,0$00:00:07,631
double ID;-->double ID = EXPR;$1$1,0$1,0$1,0$00:00:05,990
boolean ID = EXPR;-->boolean ID = EXPR;$72$0,8089887640449438$0,8089887640449438$1,0$00:00:04,686
while (EXPR) {-->while (EXPR) {$282$0,9724137931034482$0,9724137931034482$1,0$00:00:04,874
while (LT) {-->while (EXPR) {$3$1,0$1,0$0,16666666666666666$00:00:05,490
for (<...>) {-->for (<...>) {$352$0,11912013536379018$0,704$0,25$00:00:04,787
_-->for (ID ID: ID) {$0$0,0$0,0$0,0$00:00:05,013
ID<2>.add(ID<0>);-->ID<2>.addAll(ID<1>);$2$0,4$0,4$1,0$00:00:05,412
ID.toString()-->ID.toString()$28$0,027916251246261216$0,056$1,0$00:00:04,906
ID.hashCode()-->ID.hashCode()$3$0,031578947368421054$0,031578947368421054$0,00625$00:00:04,887
list.add(ID);--><...>$0$0,0$0,0$0,0$00:00:04,882
ID binOP ID-->ID binOP ID$64$0,015690120127482225$0,128$0,5$00:00:04,602
ID unOP;-->ID unOP;$0$0,0$0,0$0,0$00:00:04,552
_-->ID unOP$30$0,011976047904191617$0,06$0,07142857142857142$00:00:08,223
ID<0>() --> ID<0>(EXPR)$3$1,0$1,0$0,5$00:00:06,550
EXPR.ID<0>(EXPR<0>, EXPR<1>, EXPR<2>, EXPR<3>); --> EXPR.ID<0>(EXPR<0>, EXPR<1>, EXPR<2>, EXPR<2>);$0$0,0$0,0$0,0$00:00:04,905
EXPR.ID<0>(EXPR<0>, EXPR<1>); --> EXPR.ID<0>(EXPR<0>, EXPR<1>);$103$0,058423142370958595$0,206$0,5$00:00:04,747
EXPR.ID<0>(EXPR<0>); --> EXPR.ID<0>(EXPR<0>);$181$0,06205005142269455$0,362$0,3333333333333333$00:00:04,543
