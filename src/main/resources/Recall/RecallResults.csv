ID<1>(ID<2>, LT<3>);-->ID<1>(LT<3>, ID<2>);$0$0,0$0,0$0,0$00:01:52,280
EXPR = ID<1>(<...>);-->EXPR = ID<1>(<...>);$210$0,1810344827586207$0,1810344827586207$0,018867924528301886$00:00:48,974
EXPR = ID<1>(<...>)-->EXPR = ID<1>(<...>)$301$0,19369369369369369$0,19369369369369369$0,02127659574468085$00:01:01,488
ID<1>(ID<2>, ID<3>);-->ID<1>(ID<3>, ID<2>);$0$0,0$0,0$0,0$00:00:44,406
ID<0>.ID<1>(ID, LT)-->ID<0>.ID<1>(ID, LT)$35$0,06329113924050633$0,06329113924050633$0,03333333333333333$00:00:41,936
LT-->LT binOP LT$142$0,3294663573085847$0,3294663573085847$0,004784688995215311$00:00:59,215
LT-->LT$4446$0,04547500204565911$0,8892$1,0$00:00:40,792
return;-->return ID;$27$0,9642857142857143$0,9642857142857143$2,4378352023403217E-4$00:00:32,914
return ID;-->return ID;$741$0,4768339768339768$0,4768339768339768$0,002331002331002331$00:00:36,558
return;-->return EXPR;$117$0,9512195121951219$0,9512195121951219$3,3955857385398983E-4$00:00:23,524
return EXPR;-->return EXPR;$3770$0,09312090897863406$0,754$1,0$00:00:25,888
return null;-->return EXPR;$291$0,75$0,75$0,0034965034965034965$00:00:09,179
_-->return;$17$0,029462738301559793$0,029462738301559793$0,005649717514124294$00:00:07,073
<...>;-->_$0$0,0$0,0$0,0$00:00:06,745
_--><...>$450$0,002841716396703609$0,09$0,0026109660574412533$00:00:04,493
System.out.println(EXPR);-->_$24$0,07430340557275542$0,07430340557275542$0,00205761316872428$00:00:22,156
System.out.print(EXPR);-->_$2$0,4$0,4$0,024390243902439025$00:00:19,291
System.out.print(EXPR);-->System.out.print(EXPR);$2$0,15384615384615385$0,15384615384615385$0,03125$00:00:19,949
_-->System.out.println(<...>);$27$0,17088607594936708$0,17088607594936708$0,3333333333333333$00:00:23,810
_-->System.out.println(<...>)$62$0,25101214574898784$0,25101214574898784$0,09090909090909091$00:00:41,278
EXPR = ID(ID);-->EXPR = ID(ID);$4$0,04819277108433735$0,04819277108433735$3,9494470774091627E-4$00:00:41,290
EXPR = ID();-->EXPR = ID(ID);$2$0,125$0,125$4,3252595155709344E-4$00:00:41,008
EXPR = ID()-->EXPR = ID(ID)$3$0,125$0,125$2,559508574353724E-4$00:00:37,311
EXPR = LT;-->EXPR = ID;$34$0,9714285714285714$0,9714285714285714$0,00390625$00:00:44,437
EXPR = LT-->EXPR = ID$69$0,7840909090909091$0,7840909090909091$0,0064516129032258064$00:00:45,687
continue;-->_;$52$0,65$0,65$0,001128668171557562$00:00:38,227
break;-->_;$0$0,0$0,0$0,0$00:00:33,772
break;-->return EXPR;$12$0,8$0,8$0,001658374792703151$00:00:35,947
_-->continue;$44$0,13253012048192772$0,13253012048192772$0,011111111111111112$00:00:39,689
if (EXPR) {-->EXPR;$1$0,02564102564102564$0,02564102564102564$9,699321047526673E-4$00:00:49,618
if (LT) {-->if (ID) {$0$0,0$0,0$0,0$00:00:48,123
if (ID) {-->if (EXPR) {$1$0,002320185614849188$0,002320185614849188$2,447980416156671E-4$00:00:42,190
if (ID) {-->if (ID()) {$0$0,0$0,0$0,0$00:00:59,137
if (ID<0>) {-->if (ID<1>()) {$0$0,0$0,0$0,0$00:00:51,111
<...>-->} else {$436$0,006162369968340117$0,0872$0,019230769230769232$00:00:27,685
_-->import java.io.ID;$428$0,240990990990991$0,240990990990991$0,0024630541871921183$00:00:12,307
_-->import java.ID.ID;$473$0,0477681276509796$0,0946$0,006535947712418301$00:00:02,897
_-->import org.ID.ID.ID;$411$0,07660764212488351$0,0822$0,005494505494505495$00:00:06,416
_-->import org.ID.ID.ID.ID;$826$0,11281070745697896$0,1652$0,058823529411764705$00:00:12,511
import ID.ID.ID.ID;-->import org.ID.ID.ID;$760$1,0$1,0$0,043478260869565216$00:01:29,056
import java.util.ID;-->_$461$0,1937788986969315$0,1937788986969315$0,012048192771084338$00:00:26,802
if (EXPR != null) {-->if (EXPR == null) {$0$0,0$0,0$0,0$00:01:00,375
if (EXPR == null) {-->if (EXPR != null) {$0$0,0$0,0$0,0$00:00:53,361
<...> ID(<...>) throws ID { --> <...> ID(<...>) {$224$0,2607683352735739$0,2607683352735739$0,02$00:00:53,973
<...> ID() { --> <...> ID() {$133$0,0328963640860747$0,0328963640860747$0,011111111111111112$00:00:46,213
public static void ID() { -->public static void ID() {$0$0,0$0,0$0,0$00:00:46,291
public static void ID(<...>) { -->public static void ID(<...>) {$347$0,517910447761194$0,517910447761194$0,029411764705882353$00:01:10,296
public void ID(<...>) { -->public static void ID(<...>) {$4$0,19047619047619047$0,19047619047619047$5,714285714285715E-4$00:00:41,997
package ID;-->package ID;$2$1,0$1,0$0,001303780964797914$00:00:24,240
EXPR-->try {EXPR;} catch (ID ID) {<...>}$38$1,0$1,0$0,03125$00:00:58,902
EXPR;-->try {EXPR;} catch (ID ID) {<...>}$34$1,0$1,0$0,018518518518518517$00:00:45,229
EXPR;-->try {EXPR;} finally {<...>}$4$1,0$1,0$0,14285714285714285$00:00:55,176
int ID;-->int ID = LT;$0$0,0$0,0$0,0$00:00:45,542
double ID;-->double ID = EXPR;$0$0,0$0,0$0,0$00:00:39,468
boolean ID = EXPR;-->boolean ID = EXPR;$8$0,0898876404494382$0,0898876404494382$0,002197802197802198$00:00:30,989
while (EXPR) {-->while (EXPR) {$183$0,6310344827586207$0,6310344827586207$0,011627906976744186$00:00:26,619
while (LT) {-->while (EXPR) {$0$0,0$0,0$0,0$00:00:24,045
for (<...>) {-->for (<...>) {$1875$0,6345177664974619$0,6345177664974619$0,25$00:00:19,203
_-->for (ID ID: ID) {$103$0,18592057761732853$0,18592057761732853$0,0017123287671232876$00:00:18,590
ID<2>.add(ID<0>);-->ID<2>.addAll(ID<1>);$0$0,0$0,0$0,0$00:00:28,007
ID.toString()-->ID.toString()$19$0,018943170488534396$0,018943170488534396$0,007194244604316547$00:00:33,322
ID.hashCode()-->ID.hashCode()$1$0,010526315789473684$0,010526315789473684$2,048760499897562E-4$00:00:31,168
list.add(ID);--><...>$0$0,0$0,0$0,0$00:00:36,268
ID binOP ID-->ID binOP ID$501$0,1228242216229468$0,1228242216229468$0,0625$00:00:26,374
ID unOP;-->ID unOP;$49$0,98$0,98$0,004629629629629629$00:00:27,964
_-->ID unOP$2246$0,8966067864271458$0,8966067864271458$1,0$00:00:40,083
ID<0>() --> ID<0>(EXPR)$3$1,0$1,0$4,44247001332741E-4$00:00:45,735
EXPR.ID<0>(EXPR<0>, EXPR<1>, EXPR<2>, EXPR<3>); --> EXPR.ID<0>(EXPR<0>, EXPR<1>, EXPR<2>, EXPR<2>);$0$0,0$0,0$0,0$00:00:53,988
EXPR.ID<0>(EXPR<0>, EXPR<1>); --> EXPR.ID<0>(EXPR<0>, EXPR<1>);$33$0,01871809415768576$0,01871809415768576$0,0027247956403269754$00:00:51,218
EXPR.ID<0>(EXPR<0>); --> EXPR.ID<0>(EXPR<0>);$118$0,04045251971203291$0,04045251971203291$0,006329113924050633$00:00:57,394
